// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	AddMovieStudio(ctx context.Context, arg AddMovieStudioParams) error
	CheckAlbumExistsBySpotifyID(ctx context.Context, spotifyID string) (bool, error)
	CheckAlbumGenreExist(ctx context.Context, arg CheckAlbumGenreExistParams) (bool, error)
	CheckGenreExistByTag(ctx context.Context, tag string) (bool, error)
	CheckMovieGenreExists(ctx context.Context, arg CheckMovieGenreExistsParams) (bool, error)
	CheckMusicianExistsBySpotifyID(ctx context.Context, spotifyID string) (bool, error)
	CheckMusicianGenreExist(ctx context.Context, arg CheckMusicianGenreExistParams) (bool, error)
	CheckTrackExistByFilePath(ctx context.Context, filePath string) (bool, error)
	CheckTrackGenreExists(ctx context.Context, arg CheckTrackGenreExistsParams) (bool, error)
	CheckUserExists(ctx context.Context, arg CheckUserExistsParams) (bool, error)
	CreateAlbum(ctx context.Context, arg CreateAlbumParams) (Album, error)
	CreateAlbumGenre(ctx context.Context, arg CreateAlbumGenreParams) error
	CreateAudioStream(ctx context.Context, arg CreateAudioStreamParams) (AudioStream, error)
	CreateCastMember(ctx context.Context, arg CreateCastMemberParams) (CastList, error)
	CreateChapter(ctx context.Context, arg CreateChapterParams) (Chapter, error)
	CreateCrewMember(ctx context.Context, arg CreateCrewMemberParams) (CrewList, error)
	CreateGenre(ctx context.Context, arg CreateGenreParams) (Genre, error)
	CreateMovie(ctx context.Context, arg CreateMovieParams) (Movie, error)
	CreateMovieExtra(ctx context.Context, arg CreateMovieExtraParams) (MovieExtra, error)
	CreateMovieGenre(ctx context.Context, arg CreateMovieGenreParams) error
	CreateMusician(ctx context.Context, arg CreateMusicianParams) (Musician, error)
	CreateMusicianGenre(ctx context.Context, arg CreateMusicianGenreParams) error
	CreateSettings(ctx context.Context, arg CreateSettingsParams) (GlobalSetting, error)
	CreateSubtitle(ctx context.Context, arg CreateSubtitleParams) (Subtitle, error)
	CreateTrack(ctx context.Context, arg CreateTrackParams) (Track, error)
	CreateTrackGenre(ctx context.Context, arg CreateTrackGenreParams) error
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateVideoStream(ctx context.Context, arg CreateVideoStreamParams) (VideoStream, error)
	DeleteUser(ctx context.Context, id int32) error
	GetAlbumBySpotifyID(ctx context.Context, spotifyID string) (Album, error)
	GetAlbumUnknown(ctx context.Context) (Album, error)
	GetGenreByTag(ctx context.Context, tag string) (Genre, error)
	GetLatestMovies(ctx context.Context) ([]GetLatestMoviesRow, error)
	GetMovieByTmdbID(ctx context.Context, tmdbID string) (GetMovieByTmdbIDRow, error)
	GetMovieCount(ctx context.Context) (int64, error)
	GetMovieDetails(ctx context.Context, id int32) (GetMovieDetailsRow, error)
	GetMovieForStreaming(ctx context.Context, id int32) (GetMovieForStreamingRow, error)
	GetMovieStudios(ctx context.Context, movieID int32) ([]Studio, error)
	GetMovieVideoStreams(ctx context.Context, movieID pgtype.Int4) ([]VideoStream, error)
	GetMusicianBySpotifyID(ctx context.Context, spotifyID string) (Musician, error)
	GetMusicianUnknown(ctx context.Context) (Musician, error)
	GetOrCreateArtist(ctx context.Context, arg GetOrCreateArtistParams) (GetOrCreateArtistRow, error)
	GetOrCreateStudio(ctx context.Context, arg GetOrCreateStudioParams) (GetOrCreateStudioRow, error)
	GetSettings(ctx context.Context) (GlobalSetting, error)
	GetTotalUsersCount(ctx context.Context) (int64, error)
	GetUserByID(ctx context.Context, id int32) (GetUserByIDRow, error)
	GetUserForLogin(ctx context.Context, arg GetUserForLoginParams) (User, error)
	GetUsersPaginated(ctx context.Context, arg GetUsersPaginatedParams) ([]GetUsersPaginatedRow, error)
	UpdateSettings(ctx context.Context, arg UpdateSettingsParams) (GlobalSetting, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (UpdateUserRow, error)
	UpdateUserAvatar(ctx context.Context, arg UpdateUserAvatarParams) (UpdateUserAvatarRow, error)
}

var _ Querier = (*Queries)(nil)
