// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: album_genres.sql

package database

import (
	"context"
)

const checkAlbumGenreExist = `-- name: CheckAlbumGenreExist :one
SELECT EXISTS(
    SELECT 1 FROM album_genres WHERE album_id = $1 AND genre_id = $2
) as exists
`

type CheckAlbumGenreExistParams struct {
	AlbumID int32 `json:"album_id"`
	GenreID int32 `json:"genre_id"`
}

func (q *Queries) CheckAlbumGenreExist(ctx context.Context, arg CheckAlbumGenreExistParams) (bool, error) {
	row := q.db.QueryRow(ctx, checkAlbumGenreExist, arg.AlbumID, arg.GenreID)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}

const createAlbumGenre = `-- name: CreateAlbumGenre :exec
INSERT INTO album_genres (
    album_id, genre_id
) VALUES (
    $1, $2
)
`

type CreateAlbumGenreParams struct {
	AlbumID int32 `json:"album_id"`
	GenreID int32 `json:"genre_id"`
}

func (q *Queries) CreateAlbumGenre(ctx context.Context, arg CreateAlbumGenreParams) error {
	_, err := q.db.Exec(ctx, createAlbumGenre, arg.AlbumID, arg.GenreID)
	return err
}
