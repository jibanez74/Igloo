// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: studios.sql

package database

import (
	"context"
)

const createStudio = `-- name: CreateStudio :one
INSERT INTO studios (
    name,
    country,
    logo,
    tmdb_id
) VALUES (
    $1, $2, $3, $4
)
RETURNING id, created_at, updated_at, name, country, logo, tmdb_id
`

type CreateStudioParams struct {
	Name    string `json:"name"`
	Country string `json:"country"`
	Logo    string `json:"logo"`
	TmdbID  int32  `json:"tmdb_id"`
}

func (q *Queries) CreateStudio(ctx context.Context, arg CreateStudioParams) (Studio, error) {
	row := q.db.QueryRow(ctx, createStudio,
		arg.Name,
		arg.Country,
		arg.Logo,
		arg.TmdbID,
	)
	var i Studio
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.Country,
		&i.Logo,
		&i.TmdbID,
	)
	return i, err
}

const getStudioByTmdbID = `-- name: GetStudioByTmdbID :one
SELECT id, tmdb_id FROM studios
WHERE tmdb_id = $1
`

type GetStudioByTmdbIDRow struct {
	ID     int32 `json:"id"`
	TmdbID int32 `json:"tmdb_id"`
}

func (q *Queries) GetStudioByTmdbID(ctx context.Context, tmdbID int32) (GetStudioByTmdbIDRow, error) {
	row := q.db.QueryRow(ctx, getStudioByTmdbID, tmdbID)
	var i GetStudioByTmdbIDRow
	err := row.Scan(&i.ID, &i.TmdbID)
	return i, err
}
